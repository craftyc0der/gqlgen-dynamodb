version: '3.8'
services:
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - ./dynamo:/home/dynamodblocal/data:rw

  gqlgen-dynamodb:
    profiles: [compiled]
    image: gqlgen-dynamodb:latest
    ports:
      - "8080:8080"
    environment:
      - LOCAL=http://dynamodb-local:8000
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_REGION=us-east-1
      - COLLECTOR_URL=agent:4317
    depends_on:
      - dynamodb-local
      - agent
      - tempo
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  loki:
    profiles: [agent]
    image: grafana/loki:2.2.1
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  cortex:
    profiles: [agent]
    image: cortexproject/cortex:v1.8.1
    volumes:
      - ./cortex/config:/etc/cortex-config
    entrypoint:
      - /bin/cortex
      - -config.file=/etc/cortex-config/cortex.yaml
    ports:
      - "9009:9009"

  avalanche:
    profiles: [agent]
    image: quay.io/freshtracks.io/avalanche:latest
    command:
      - --metric-count=3000
      - --series-interval=3600
      - --metric-interval=7200
    ports:
      - "9001:9001"

  grafana:
    profiles: [agent]
    image: grafana/grafana:latest
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ./grafana/config:/etc/grafana-config
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"

  tempo:
    profiles: [agent]
    image: grafana/tempo:1.3.2
    command:
      - "-storage.trace.backend=local"                  # tell tempo where to permanently put traces
      - "-storage.trace.local.path=/tmp/tempo/traces"
      - "-storage.trace.wal.path=/tmp/tempo/wal"        # tell tempo where to store the wal
      - "-auth.enabled=false"                           # disables the requirement for the X-Scope-OrgID header
      - "-server.http-listen-port=3200"
      - "-search.enabled=true"
    ports:
      - "3200:3200"

  agent:
    profiles: [agent]
    image: grafana/agent:latest
    volumes:
      - ./agent/config:/etc/agent-config
      - /var/lib/docker/containers:/var/lib/docker/containers
    entrypoint:
      - /bin/agent
      - -config.file=/etc/agent-config/agent.yaml
      - -metrics.wal-directory=/tmp/agent/wal
      - -enable-features=integrations-next
      - -config.expand-env
      - -config.enable-read-api
    environment:
      HOSTNAME: agent
      REMOTE_WRITE_HOST: cortex:9009
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:4317
      AVALANCHE_HOST: avalanche:9001
      GQLGEN_DYNAMODB_HOST: gqlgen-dynamodb:8080
    ports:
      - "4317:4317"
      - "4318:4318"
      - "12345:12345"
      - "12346:12346"
    depends_on:
      - cortex
      - loki
      - tempo